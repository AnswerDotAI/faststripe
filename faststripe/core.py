"""Fill in a module description here"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['stripe_openapi_url', 'stripe_spec', 'eps', 'stripe_endpoints']

# %% ../nbs/00_core.ipynb 2
from collections import defaultdict
from fastcore.all import *
from httpx import get as xget, post as xpost, delete as xdelete
from inspect import Parameter, Signature

import httpx, json, os

# %% ../nbs/00_core.ipynb 3
stripe_openapi_url = 'https://raw.githubusercontent.com/stripe/openapi/refs/heads/master/openapi/spec3.json'
stripe_spec = xget(stripe_openapi_url).json()

# %% ../nbs/00_core.ipynb 14
def stripe_endpoints(spec: dict):
    'Extracts all the endpoints and their parameters from the Stripe OpenAPI spec.'
    endpoints = []
    for path, methods in spec['paths'].items():
        for verb, details in methods.items():
            op_id = details.get('operationId', '')
            summary = details.get('summary', '')
            query_params = [dict(name=p['name'], description=p.get('description', ''))
                            for p in details.get('parameters', []) if p.get('in') == 'query']
            body_params = []
            if 'requestBody' in details:
                schema = nested_idx(details, 'requestBody', 'content', 'application/x-www-form-urlencoded', 'schema', 'properties') or {}
                body_params = [dict(name=k, description=v.get('description', '')) for k,v in schema.items()]
            all_params = query_params + body_params
            endpoints.append(dict(path=path, verb=verb, op_id=op_id, summary=summary, params=all_params))
    return endpoints


# %% ../nbs/00_core.ipynb 15
eps = stripe_endpoints(stripe_spec)

# %% ../nbs/00_core.ipynb 19
def _mk_func(path, verb, param_info, summary):
    sig_params = [Parameter(param['name'], Parameter.KEYWORD_ONLY, default=None) for param in param_info]
    param_docs = '\n'.join(f"    {param['name']}: {param['description']}" for param in param_info)
    docstring = f"{summary}\n\nParameters:\n{param_docs}" if param_docs else summary
    def m(**kwargs): return getattr(httpx, verb)(stripe_api_url + path, headers=headers, params=kwargs).json()
    m.__signature__ = Signature(sig_params)
    m.__doc__ = docstring
    return m
